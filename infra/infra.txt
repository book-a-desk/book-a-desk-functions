Manual prerequisites:
- Create user "book-a-desk-cloudformation-lambda"
  # Specify "Access key" for AWS credential type
  # Set without a permissions boundary

- Assign 7 user permissions to execute cloudformation stack
  AmazonEC2ContainerRegistryFullAccess
  AmazonS3FullAccess
  AWSLambda_FullAccess
  AWSCloudFormationFullAccess
  CloudWatchFullAccess
  
  PassRole
  {
      "Version": "2012-10-17",
      "Statement": [
          {
              "Sid": "VisualEditor0",
              "Effect": "Allow",
              "Action": "iam:PassRole",
              "Resource": [
                  "arn:aws:iam::{accountId}:role/cloudformationstacktest",
                  "arn:aws:iam::{accountId}:role/cloudformationstackbackendtest",
                  "arn:aws:iam::{accountId}:role/book-a-desk-lambda"
              ]
          }
      ]
  }
  
  GetParametersByPath (custom parameter):
  {
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Action": [
                "ssm:GetParametersByPath"
            ],
            "Resource": "*"
        }
    ]
}

- Create a role "book-a-desk-lambda" with the following permissions:
  GetParametersByPath
  IAMFullAccess
  AmazonEC2ContainerRegistryFullAccess
  CloudWatchFullAccess
  CloudWatchEventsFullAccess
  AWSLambda_FullAccess
  
- Create parameters in the parameter store 
  /BookADesk/Book-A-Desk-Api/Url: The base URL for the API
  /BookADesk/Offices/Canada: The name of the office in Canada
  /BookADesk/Offices/Europe: The name of the office in Europe

- Create two environment variables in context "book-a-desk" in CircleCI
  BOOK_A_DESK_BASE_API_URL_{ENVIRONMENT}
  AWS_ECR_ACCOUNT_URL_{ENVIRONMENT}

- Create two environment variables in context "aws-credentials" in CircleCI
  AWS_ACCESS_KEY_ID_LAMBDA_{ENVIRONMENT}
  AWS_SECRET_ACCESS_KEY_LAMBDA_{ENVIRONMENT}
  
 - Create a private repository "book-a-desk-notification-lambda" in ECR (Elastic Container Registry) with default settings
    Tag immutability: Disabled
    Scan on push: Disabled
    KMS encryption: Disabled

========================

Cloudformation execution:
- Create a role "Book-A-Desk-LambdaExecutionRole"
- Create a rule in Event Bridge "DailyOfficeRestrictionNotificationsCanada"
- Create a rule in Event Bridge "DailyOfficeRestrictionNotificationsEurope"
- Create a lambda function "OfficeRestrictionNotifications"
- Add a trigger for each existing rule (with an event)
- Add a log group for CloudWatch